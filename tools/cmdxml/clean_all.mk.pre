# cmdxml integration
CMDXML_MK_DIR := $(patsubst %/,%,$(dir $(lastword $(MAKEFILE_LIST))))

CMDXML ?= $(CMDXML_MK_DIR)/cmdxml

# Report names
CMDXML_CLASSNAME ?= $(BOARD).$(APPLICATION)
CMDXML_TESTCLASSNAME ?= $(CMDXML_CLASSNAME).compilation


# Output files for cmdxml-clean-all command
# board/application is also in the name to allow having a fixed CMDXML_OUT_DIR
CMDXML_OUT_DIR ?= $(BUILD_DIR)/output/pytest_results/$(BOARD)/$(APPLICATION)
CMDXML_XML_OUTPUT ?= $(CMDXML_OUT_DIR)/$(CMDXML_TESTCLASSNAME).xml

# JunitXML testsuite config
CMDXMLFLAGS += --junit-xml=$(CMDXML_XML_OUTPUT)
CMDXMLFLAGS += --junit-prefix=$(CMDXML_TESTCLASSNAME)
CMDXMLFLAGS += -o junit_suite_name=$(CMDXML_CLASSNAME)

# Do not parse and export all the build variables
# This is a HACK to prevent issues when running `make` inside of `make`
GLOBAL_GOALS += cmdxml-clean-all
# Handle that 'BOARD' is overwritten when using a global goal
cmdxml-clean-all: BOARD:=$(BOARD)


# TODO make it more generic way for other targets
.PHONY: cmdxml-clean-all
cmdxml-clean-all:
	"$(CMDXML)" $(CMDXMLFLAGS) --command 'make clean all'
